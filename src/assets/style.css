@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  font-weight: normal;
}

/* Customized CSS class  */
@layer components {
  /* Layout and body CSS */

  body {
    @apply bg-[#25242a] font-jakarta;
  }

  #app {
    @apply w-full min-h-screen;
  }

  .sidebar {
    @apply fixed bottom-0 top-0 z-20 h-screen;
  }

  body .wrapper {
    @apply flex flex-col flex-1;
  }

  body .wrapper .header {
    @apply sticky top-0 z-30 w-full flex items-center overflow-visible;
  }

  body .wrapper .content {
    @apply flex w-full flex-col scroll-smooth min-h-[calc(100vh-60px)];
  }

  body .wrapper .footer {
    @apply mt-auto flex flex-wrap items-center justify-center gap-x-8 gap-y-2 p-4;
  }

  /* others customs design */
  .sb-container {
    @apply w-full mx-auto;
  }

  .card {
    @apply w-full rounded-md bg-white dark:bg-dark-200 transition-all ease-in-out delay-300 shadow-sm drop-shadow-md shadow-black/10 dark:shadow-dark-600/20;
  }

  .card-body {
    @apply p-[1.5rem];
  }
}

/* Scroll bar customization color  */
/* width */
::-webkit-scrollbar {
  width: 8px;
}

/* Track */
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px grey;
  border-radius: 10px;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: rgba(131, 131, 131, 0.582);
  border-radius: 10px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #6161618e;
}

/* App layout CSS */
.sidebar {
  overflow: hidden;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

body .wrapper {
  transition-property: margin;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.p-dialog-mask.p-component-overlay.p-component-overlay-enter {
  background-color: rgb(0 0 0 / 80%) !important;
}

/* Storing for using purpose in Future */
/* App layout css before in vanilla css */
/* #app {
  width: 100%;
  min-height: 100vh;
}

.sidebar {
  position: fixed;
  bottom: 0px;
  top: 0px;
  z-index: 20;
  height: 100vh;
  overflow: hidden;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

body .wrapper {
  display: flex;
  flex: 1 1 0%;
  flex-direction: column;
  transition-property: margin;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

body .wrapper .header {
  position: sticky;
  top: 0px;
  z-index: 30;
  display: flex;
  width: 100%;
  align-items: center;
  overflow: visible;
  background-color: white;
}

body .wrapper .content {
  display: flex;
  width: 100%;
  flex-direction: column;
  scroll-behavior: smooth;
  min-height: calc(100vh - 60px);
}

body .wrapper .footer {
  margin-top: auto;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  column-gap: 2rem;
  row-gap: 0.5rem;
  padding: 1rem;
} */